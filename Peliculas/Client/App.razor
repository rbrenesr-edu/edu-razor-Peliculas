@using System.Reflection;

@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@inject LazyAssemblyLoader lazyAssemblyLoader;



<Router 
    AppAssembly="@typeof(App).Assembly"
        OnNavigateAsync="OnNavigateAsync"
        AdditionalAssemblies="assemblies">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <CustomNotFoundComponent />
        </LayoutView>
    </NotFound>
</Router>


@code{
    private List<Assembly> assemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext args)
    {

        if (args.Path.EndsWith("counter"))
        {
            var assembliesCargados = await lazyAssemblyLoader.LoadAssembliesAsync(
                new List<string> { "MathNet.Numerics.dll" }
            );
            assemblies.AddRange(assembliesCargados);
        }

    }

}