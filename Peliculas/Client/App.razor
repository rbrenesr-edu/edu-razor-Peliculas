@using System.Reflection;

@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@inject LazyAssemblyLoader lazyAssemblyLoader;



<Router AppAssembly="@typeof(App).Assembly"
        OnNavigateAsync="OnNavigateAsync"
        AdditionalAssemblies="assemblies">
    <Found Context="routeData">
        @* <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" /> *@
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <Authorizing>
                <p>Autorizando al usuario...</p>
            </Authorizing>
            <NotAuthorized>
                <p>No está autorizado...</p>
            </NotAuthorized>
        </AuthorizeRouteView>


        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <CustomNotFoundComponent />
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>


@code {
    private List<Assembly> assemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext args)
    {

        if (args.Path.EndsWith("counter"))
        {
            var assembliesCargados = await lazyAssemblyLoader.LoadAssembliesAsync(
                new List<string> { "MathNet.Numerics.dll" }
            );
            assemblies.AddRange(assembliesCargados);
        }

    }

}