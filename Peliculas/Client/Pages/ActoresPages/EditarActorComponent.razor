@page "/actores/editar/{ActorId:int}"
@inject NavigationManager navigationManager;
@inject IRepositorio repositorio
@inject SweetAlertService swal

<h3>EditarActorComponent</h3>


@if (Actor is null)
{
    <p>Cargando...</p>
}
else
{
    <FormularioActoresComponent Actor="Actor" OnValidSubmit="Editar" />
}



@code {
    [Parameter] public int ActorId { get; set; }
    private Actor? Actor;
    private FormularioActoresComponent formularioActoresComponent = null!;

    protected override async Task OnInitializedAsync()
    {
        var respuestaHttp = await repositorio.Get<Actor>($"api/actores/{ActorId}");

        if (respuestaHttp.Error)
        {
            if (respuestaHttp.HttpResponseMessage!.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("actores");
            }
            else
            {
                var mensajeError = await respuestaHttp.ObtenerMensajeError();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            Actor = respuestaHttp.Response;
        }

    }



    private async Task Editar()
    {
        var respuestaHttp = await repositorio.Put("api/actores", Actor);

        if (respuestaHttp.Error)
        {
            var mensajeError = await respuestaHttp.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {            
            navigationManager.NavigateTo("actores");
        }
    }

}
