@page "/generos/editar/{GeneroId:int}"
@inject NavigationManager navigationManager;
@inject IRepositorio repositorio
@inject SweetAlertService swal

<h3>EditarGeneroComponent</h3>

@if (Genero is null)
{
    <p>Cargando...</p>
}
else
{
    <FormularioGeneroComponent @ref="formularioGeneroComponent"
                               Genero="Genero"
                               OnValidSubmit="Editar" />
}

@code {
    [Parameter] public int GeneroId { get; set; }

    private Genero? Genero;
    private FormularioGeneroComponent formularioGeneroComponent = null!;

    protected override async Task OnInitializedAsync()
    {
        var respuestaHttp = await repositorio.Get<Genero>($"api/generos/{GeneroId}");

        if (respuestaHttp.Error)
        {
            if (respuestaHttp.HttpResponseMessage!.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("generos");
            }
            else
            {
                var mensajeError = await respuestaHttp.ObtenerMensajeError();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        }
        else
        {
            Genero = respuestaHttp.Response;
        }

    }

    private async Task Editar()
    {
        var respuestaHttp = await repositorio.Put("api/generos/", Genero);

        if (respuestaHttp.Error)
        {

            var mensajeError = await respuestaHttp.ObtenerMensajeError();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);

        }
        else
        {
            formularioGeneroComponent.isTheFormProcessedSuccessfully = true;
            navigationManager.NavigateTo("generos");
        }
    }
}
