@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService swall

<h3>CrearPeliculaComponent</h3>

@if (MostrarFormulario)
{
    <FormularioPeliculasComponent Pelicula="Pelicula" OnValidSubmit="Crear" GenerosNoSeleccionados="GenerosNoSeleccionados" />
}else
{
    <p>Cargando...</p>
}


@code {
    private Pelicula Pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new List<Genero>();
    public bool MostrarFormulario { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {
        var respuesta = await repositorio.Get<List<Genero>>("api/generos");

        GenerosNoSeleccionados = respuesta.Response!;
        MostrarFormulario = true;
    }


    private async Task Crear()
    {
        var httpResponse = await repositorio.Post<Pelicula, int>("api/peliculas", Pelicula);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.ObtenerMensajeError();
            await swall.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            var peliculaId = httpResponse.Response;
            navigationManager.NavigateTo($"/pelicula/{peliculaId}/{Pelicula.Titulo.Replace(" ", "-")}");
        }

    }
}


