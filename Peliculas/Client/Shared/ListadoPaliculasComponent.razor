@inject IJSRuntime js;
@inject SweetAlertService swal
@inject IRepositorio repositorio

<div style="display:flex; flex-wrap:wrap; align-items:center;">

    <ListadoGenericoComponent Listado="Peliculas">
        <HayRegistros Context="pelicula">
            <PeliculaComponent Pelicula=pelicula
                               EliminarPelicula="ElininarPelicula" @key="pelicula.Id"/>
        </HayRegistros>
    </ListadoGenericoComponent>

</div>

@code {



    [Parameter]
    [EditorRequired]
    public List<Pelicula>? Peliculas { get; set; }


    private async Task ElininarPelicula(Pelicula pelicula)
    {
        bool confirmado = await js.Confirm($"Desea borrar la pelicula {pelicula.Titulo} ?");


        if (confirmado)
        {
            var responseHttp = await repositorio.Delete($"api/peliculas/{pelicula.Id}");

            if (responseHttp.Error)
            {

                var mensajeError = await responseHttp.ObtenerMensajeError();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);

            }
            else
            {
                Peliculas!.Remove(pelicula);
            }


           
        }

    }


}
